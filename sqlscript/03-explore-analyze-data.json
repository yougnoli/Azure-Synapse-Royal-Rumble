{
	"name": "03-explore-analyze-data",
	"properties": {
		"folder": {
			"name": "01-serverless"
		},
		"content": {
			"query": "/*\nFull tutorial available on: https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/tutorial-data-analyst\nIn this tutorial, you learn how to perform exploratory data analysis by combining different Azure Open Datasets \nusing serverless SQL pool and then visualizing the results in Azure Synapse Studio.\n\nIn particular, you analyze the New York City (NYC) Taxi dataset that includes:\n\n - Pickup and drop-off dates and times.\n - Pick up and drop-off locations.\n - Trip distances.\n - Itemized fares.\n - Rate types.\n - Payment types.\n - Driver-reported passenger counts.*/\n\n\n/*\n * * * * * * * * * * * * * * * *\n * Automatic schema inference  *\n * * * * * * * * * * * * * * * *\n\nSince data is stored in the Parquet file format, automatic schema inference is available. You can easily query the \ndata without listing the data types of all columns in the files. You also can use the virtual column mechanism and \nthe filepath function to filter out a certain subset of files.\n\nLet's first get familiar with the NYC Taxi data by running the following query. */\n\nselect top 100\n\t*\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'\n\t\t,format='parquet'\n\t) as nyc\n;\ngo\n\nselect\n\tcount(*) as num_rows\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'\n\t\t,format='parquet'\n\t) as nyc\n;\ngo -- 1,571,671,152\n\n/* Similarly, you can query the Public Holidays dataset by using the following query. */\n\nselect top 100\n\t*\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/holidaydatacontainer/Processed/*.parquet'\n\t\t,format='parquet'\n\t) as holidays\nwhere\n\tcountryOrRegion = 'italy' and year([date]) = 2016\n;\ngo\n\n/* Lastly, you can also query the Weather Data dataset by using the following query. */\n\nselect top 100\n\t*\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/isdweatherdatacontainer/ISDWeather/year=*/month=*/*.parquet'\n\t\t,format='parquet'\n\t) as weather\n;\ngo\n\n/*\n * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Time series, seasonality, and outlier analysis  *\n * * * * * * * * * * * * * * * * * * * * * * * * * *\nYou can easily summarize the yearly number of taxi rides by using the following query. */\n\nselect\n    year(tpepPickupDateTime) AS current_year\n    ,count(*) as rides_per_year\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'\n\t\t,format='parquet'\n\t) as nyc\nwhere \n\tnyc.filepath(1) >= '2009' AND nyc.filepath(1) <= '2019'\ngroup by \n\tyear(tpepPickupDateTime)\norder by \n\tyear(tpepPickupDateTime)\n;\ngo\n\n/* The data can be visualized in Synapse Studio by switching from the Table to the Chart view.\nYou can choose among different chart types, such as Area, Bar, Column, Line, Pie, and Scatter.\nIn this case, plot the Column chart with the Category column set to current_year.\n\nFrom this visualization, a trend of a decreasing number of rides over years can be clearly seen.\nPresumably, this decrease is due to the recent increased popularity of ride-sharing companies.\n*/\n\n/* Next, let's focus the analysis on a single year, for example, 2016.\nThe following query returns the daily number of rides during that year. */\n\nselect\n    convert(date, [tpepPickupDateTime]) as [current_day]\n    ,count(*) as rides_per_day\nfrom\t\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'\n\t\t,format='parquet'\n\t) as nyc\nwhere \n\tnyc.filepath(1) = '2016'\ngroup by \n\tconvert(date, [tpepPickupDateTime])\norder by \n\tconvert(date, [tpepPickupDateTime])\n;\ngo\n\n/* Again, you can easily visualize data by plotting the Column chart with\nthe Category column set to current_day and the Legend (series) column set to rides_per_day. */\n\n/* From the plot chart, you can see that there's a weekly pattern, with Saturdays as the peak day.\nDuring summer months, there are fewer taxi rides because of vacations.\nThere are also some significant drops in the number of taxi rides without a clear pattern of when and why they occur. */\n\n/* Next, let's see if the drops correlate with public holidays by joining the NYC Taxi rides dataset with the Public Holidays dataset. */\n\nwith taxi_rides as\n(\n\tselect\n\t\tconvert(date, [tpepPickupDateTime]) as [current_day]\n\t\t,count(*) as rides_per_day\n\tfrom\t\n\t\topenrowset(\n\t\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet'\n\t\t\t,format='parquet'\n\t\t) as nyc\n\twhere \n\t\tnyc.filepath(1) = '2016'\n\tgroup by \n\t\tconvert(date, [tpepPickupDateTime])\n),\npublic_holidays AS\n(\n    select\n        holidayname as holiday\n        ,convert(date, [date]) as [date]\n\tfrom\t\n\t\topenrowset(\n\t\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/holidaydatacontainer/Processed/*.parquet'\n\t\t\t,format='parquet'\n\t\t) as holidays\n\twhere\n\t\tcountryorregion = 'United States' and year([date]) = 2016\n)\nselect\n\t*\nfrom \n\ttaxi_rides as a\n\tleft outer join\n\tpublic_holidays as b \n\ton a.current_day = b.[date]\norder by \n\tcurrent_day\n;\ngo\n\n/* This time, we want to highlight the number of taxi rides during public holidays.\nFor that purpose, we choose none for the Category column and rides_per_day and holiday as the Legend (series) columns. */\n\n/* From the plot chart, you can see that during public holidays the number of taxi rides is lower.\nThere's still one unexplained large drop on January 23. Let's check the weather in NYC on that day by querying the Weather Data dataset. */\n\nselect\n\t*\nfrom\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/isdweatherdatacontainer/ISDWeather/year=*/month=*/*.parquet'\n\t\t,format='parquet'\n\t) as weather\nwhere \n\tcountryorregion = 'US' and convert(date, [datetime]) = '2016-01-23' and stationname = 'JOHN F KENNEDY INTERNATIONAL AIRPORT'\n;\ngo\n\nselect\n    avg(windspeed)\t\tas avg_windspeed\n    ,min(windspeed)\t\tas min_windspeed\n    ,max(windspeed)\t\tas max_windspeed\n    ,avg(temperature)\tas avg_temperature\n    ,min(temperature)\tas min_temperature\n    ,max(temperature)\tas max_temperature\n    ,avg(sealvlpressure) as avg_sealvlpressure\n    ,min(sealvlpressure) as min_sealvlpressure\n    ,max(sealvlpressure) as max_sealvlpressure\n    ,avg(precipdepth)\tas avg_precipdepth\n    ,min(precipdepth)\tas min_precipdepth\n    ,max(precipdepth)\tas max_precipdepth\n    ,avg(snowdepth)\t\tas avg_snowdepth\n    ,min(snowdepth)\t\tas min_snowdepth\n    ,max(snowdepth)\t\tas max_snowdepth\nfrom\n\topenrowset(\n\t\tbulk 'https://azureopendatastorage.blob.core.windows.net/isdweatherdatacontainer/ISDWeather/year=*/month=*/*.parquet'\n\t\t,format='parquet'\n\t) as weather\nwhere \n\tcountryorregion = 'US' and convert(date, [datetime]) = '2016-01-23' and stationname = 'JOHN F KENNEDY INTERNATIONAL AIRPORT'\n;\ngo\n\n/* The results of the query indicate that the drop in the number of taxi rides occurred because:\n\n1. There was a blizzard on that day in NYC with heavy snow (~30 cm).\n2. It was cold (temperature was below zero degrees Celsius).\n3. It was windy (~10 m/s). */\n\n\n/* This tutorial has shown how a data analyst can quickly perform exploratory data analysis, easily combine different\ndatasets by using serverless SQL pool, and visualize the results by using Azure Synapse Studio. */",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}